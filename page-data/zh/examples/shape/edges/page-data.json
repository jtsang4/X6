{"componentChunkName":"component---node-modules-antv-gatsby-theme-antv-site-templates-example-tsx","path":"/zh/examples/shape/edges","result":{"data":{"site":{"siteMetadata":{"title":"X6","githubUrl":"https://github.com/antvis/x6/tree/master/packages/x6-sites","examples":[{"slug":"shape","icon":"shape","title":{"zh":"元素","en":"Shape"}},{"slug":"interaction","icon":"interaction","title":{"zh":"交互","en":"Interaction"}},{"slug":"animation","icon":"scatter","title":{"zh":"动画","en":"Animation"}}],"playground":null},"pathPrefix":""},"allMarkdownRemark":{"edges":[{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/en/examples/gallery"},"frontmatter":{"title":"Gallery","order":-1,"icon":"other"},"parent":{"__typename":"File","relativePath":"gallery/index.en.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/zh/examples/gallery"},"frontmatter":{"title":"所有图表","order":-1,"icon":"other"},"parent":{"__typename":"File","relativePath":"gallery/index.zh.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/zh/examples/shape/nodes"},"frontmatter":{"title":"内置节点","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"shape/nodes/index.zh.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/zh/examples/shape/edges"},"frontmatter":{"title":"内置边","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"shape/edges/index.zh.md"}}}]}},"pageContext":{"exampleSections":{"examples":[{"relativePath":"shape/edges/demo/edge.ts","absolutePath":"/home/runner/work/X6/X6/packages/x6-sites/examples/shape/edges/demo/edge.ts","order":0,"filename":"edge.ts","title":{"zh":"默认边","en":"Default Edge"},"screenshot":"","source":"import { Graph } from '@antv/x6'\nimport insertCss from 'insert-css'\n\nconst container = document.getElementById('container')!\nconst graph = new Graph({\n  container,\n  grid: true,\n})\n\ngraph.addEdge({\n  source: { x: 240, y: 40 },\n  target: { x: 280, y: 180 },\n  vertices: [{ x: 240, y: 140 }],\n})\n\ngraph.addEdge({\n  source: { x: 340, y: 40 },\n  target: { x: 380, y: 180 },\n  vertices: [{ x: 340, y: 140 }],\n  connector: {\n    name: 'rounded',\n    args: { radius: 10 },\n  },\n  attrs: {\n    line: {\n      targetMarker: 'classic',\n      stroke: '#1890ff',\n    },\n  },\n})\n\ngraph.addEdge({\n  source: { x: 440, y: 40 },\n  target: { x: 480, y: 180 },\n  vertices: [{ x: 440, y: 140 }],\n  connector: { name: 'smooth' },\n  attrs: {\n    line: {\n      stroke: '#F7BD2D',\n      targetMarker: 'classic',\n    },\n  },\n})\n\ngraph.addEdge({\n  source: { x: 540, y: 40 },\n  target: { x: 580, y: 180 },\n  vertices: [{ x: 540, y: 140 }],\n  connector: { name: 'smooth' },\n  attrs: {\n    line: {\n      stroke: '#1DA677',\n      strokeDasharray: 5,\n      targetMarker: 'classic',\n      style: {\n        animation: 'ant-line 30s infinite linear',\n      },\n    },\n  },\n})\n\ngraph.addEdge({\n  source: { x: 240, y: 240 },\n  target: { x: 280, y: 380 },\n  vertices: [{ x: 240, y: 340 }],\n  router: { name: 'er' },\n})\n\ngraph.addEdge({\n  source: { x: 340, y: 240 },\n  target: { x: 380, y: 380 },\n  vertices: [{ x: 340, y: 340 }],\n  router: { name: 'orth' },\n  connector: { name: 'rounded' },\n  attrs: {\n    line: {\n      targetMarker: 'classic',\n      stroke: '#1890ff',\n    },\n  },\n})\n\ngraph.addEdge({\n  source: { x: 440, y: 240 },\n  target: { x: 480, y: 380 },\n  vertices: [{ x: 440, y: 340 }],\n  router: { name: 'manhattan' },\n  connector: { name: 'rounded' },\n  attrs: {\n    line: {\n      stroke: '#F7BD2D',\n      targetMarker: 'classic',\n    },\n  },\n})\n\ngraph.addEdge({\n  source: { x: 540, y: 240 },\n  target: { x: 580, y: 380 },\n  vertices: [{ x: 540, y: 360 }],\n  router: { name: 'metro' },\n  attrs: {\n    line: {\n      stroke: '#1DA677',\n      strokeDasharray: 5,\n      targetMarker: 'classic',\n    },\n  },\n})\n\ninsertCss(`\n  @keyframes ant-line {\n    to {\n        stroke-dashoffset: -1000\n    }\n  }\n`)\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/x6\", \"insert-css\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/x6\"), require(\"insert-css\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.x6, global.insertCss);\n    global.edge = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_x, _insertCss) {\n  \"use strict\";\n\n  _insertCss = _interopRequireDefault(_insertCss);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  var container = document.getElementById('container');\n  var graph = new _x.Graph({\n    container: container,\n    grid: true\n  });\n  graph.addEdge({\n    source: {\n      x: 240,\n      y: 40\n    },\n    target: {\n      x: 280,\n      y: 180\n    },\n    vertices: [{\n      x: 240,\n      y: 140\n    }]\n  });\n  graph.addEdge({\n    source: {\n      x: 340,\n      y: 40\n    },\n    target: {\n      x: 380,\n      y: 180\n    },\n    vertices: [{\n      x: 340,\n      y: 140\n    }],\n    connector: {\n      name: 'rounded',\n      args: {\n        radius: 10\n      }\n    },\n    attrs: {\n      line: {\n        targetMarker: 'classic',\n        stroke: '#1890ff'\n      }\n    }\n  });\n  graph.addEdge({\n    source: {\n      x: 440,\n      y: 40\n    },\n    target: {\n      x: 480,\n      y: 180\n    },\n    vertices: [{\n      x: 440,\n      y: 140\n    }],\n    connector: {\n      name: 'smooth'\n    },\n    attrs: {\n      line: {\n        stroke: '#F7BD2D',\n        targetMarker: 'classic'\n      }\n    }\n  });\n  graph.addEdge({\n    source: {\n      x: 540,\n      y: 40\n    },\n    target: {\n      x: 580,\n      y: 180\n    },\n    vertices: [{\n      x: 540,\n      y: 140\n    }],\n    connector: {\n      name: 'smooth'\n    },\n    attrs: {\n      line: {\n        stroke: '#1DA677',\n        strokeDasharray: 5,\n        targetMarker: 'classic',\n        style: {\n          animation: 'ant-line 30s infinite linear'\n        }\n      }\n    }\n  });\n  graph.addEdge({\n    source: {\n      x: 240,\n      y: 240\n    },\n    target: {\n      x: 280,\n      y: 380\n    },\n    vertices: [{\n      x: 240,\n      y: 340\n    }],\n    router: {\n      name: 'er'\n    }\n  });\n  graph.addEdge({\n    source: {\n      x: 340,\n      y: 240\n    },\n    target: {\n      x: 380,\n      y: 380\n    },\n    vertices: [{\n      x: 340,\n      y: 340\n    }],\n    router: {\n      name: 'orth'\n    },\n    connector: {\n      name: 'rounded'\n    },\n    attrs: {\n      line: {\n        targetMarker: 'classic',\n        stroke: '#1890ff'\n      }\n    }\n  });\n  graph.addEdge({\n    source: {\n      x: 440,\n      y: 240\n    },\n    target: {\n      x: 480,\n      y: 380\n    },\n    vertices: [{\n      x: 440,\n      y: 340\n    }],\n    router: {\n      name: 'manhattan'\n    },\n    connector: {\n      name: 'rounded'\n    },\n    attrs: {\n      line: {\n        stroke: '#F7BD2D',\n        targetMarker: 'classic'\n      }\n    }\n  });\n  graph.addEdge({\n    source: {\n      x: 540,\n      y: 240\n    },\n    target: {\n      x: 580,\n      y: 380\n    },\n    vertices: [{\n      x: 540,\n      y: 360\n    }],\n    router: {\n      name: 'metro'\n    },\n    attrs: {\n      line: {\n        stroke: '#1DA677',\n        strokeDasharray: 5,\n        targetMarker: 'classic'\n      }\n    }\n  });\n  (0, _insertCss.default)(\"\\n  @keyframes ant-line {\\n    to {\\n        stroke-dashoffset: -1000\\n    }\\n  }\\n\");\n});"}]}}},"staticQueryHashes":["3000541721","3000541721","653731124"]}